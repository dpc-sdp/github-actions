name: test_post_jira

on:
  workflow_call:
    inputs:
      status:
        type: string
        required: true
        default: ""

jobs:
  test_prepare_jira:
    runs-on: ubuntu-latest
    outputs:
      jira_id: ${{ steps.extract_jira_id.outputs.jira_id }}
      comment: ${{ steps.prepare_jira_comment.outputs.comment }}
    steps:
      - name: Extract JIRA ID from the commit message
        id: extract_jira_id
        run: |
          # Fetch commit message from the GitHub API
          commit_info=$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }})

          # Check if curl was successful
          if [ $? -ne 0 ]; then
            echo "Failed to fetch commit message."
            exit 0  # Exit gracefully on curl failure
          fi

          commit_message=$(echo "$commit_info" | jq -r '.commit.message')
  
          # Extract JIRA ID
          JIRA_ID=$(echo "$commit_message" | grep -oE 'SCFA-[0-9]{1,5}' || true)  # Prevents non-zero exit code
  
          # Check if JIRA ID is found
          if [ -z "$JIRA_ID" ]; then
            echo "No JIRA ID found in commit message: $commit_message"
          else
            echo "Extracted JIRA ID: $JIRA_ID"
            echo "JIRA_ID=$JIRA_ID" >> $GITHUB_ENV
            echo "jira_id=$JIRA_ID" >> "$GITHUB_OUTPUT"
          fi

      - name: Prepare JIRA Comment
        id: prepare_jira_comment
        if: env.JIRA_ID != ''
        env:
          WORKFLOW_LINK: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"  # Link to the workflow run
        run: |
          echo "Preparing JIRA comment..."

          # Determine the branch name from the Git reference
          GIT_BRANCH=${GITHUB_REF##*/}

          # Construct the comment template
          COMMENT="E2E Test - ${{ inputs.status }} on branch ${GIT_BRANCH}\n"
          COMMENT+="Workflow URL: $WORKFLOW_LINK"

          # Print the comment to the console for debugging
          echo "comment=$COMMENT" >> "$GITHUB_OUTPUT"
          echo "$COMMENT"
          echo "${{ inputs.status }}"

  post_jira_comment:
    uses: ./.github/workflows/post_jira_comment.yml
    needs: [test_prepare_jira]
    secrets: inherit
    with:
      jira_id: ${{ needs.test_prepare_jira.outputs.jira_id }}
      comment: ${{ needs.test_prepare_jira.outputs.comment }}
