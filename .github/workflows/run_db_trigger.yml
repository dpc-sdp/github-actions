name: Reusable View MySQL Tables Workflow

on:
  workflow_call:
    inputs:
      be_url:
        description: 'Backend URL'
        required: false
        type: string
      fe_url:
        description: 'Frontend URL'
        required: false
        type: string
      project:
        description: 'Project'
        required: false
        type: string
      s3_uri:
        description: 'S3 URI'
        required: true
        type: string
      file_name:
        description: 'File Name in S3'
        required: true
        type: string   
    secrets:
      DOCKER_PASSWORD:
        required: true
      DOCKER_USERNAME:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      SLACK_WEBHOOK_URL:
        required: true
      
jobs:
  view_tables:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      id-token: none

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      - name: Install jq and curl
        run: sudo apt-get update && sudo apt-get install -y jq curl
      
      - name: Echo Inputs
        run: |
          echo "S3_URI=${{ github.event.inputs.s3_uri }}"
          echo "FILE_NAME=${{ github.event.inputs.file_name }}"
      
      - name: Echo bucket and file names
        run: |
          echo "BUCKET_NAME=${{ inputs.s3_uri }}"
          echo "FILE_NAME=${{ inputs.file_name }}"


      - name: Log into Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: rashedkhan/my-custom-mysql-image
          tags: |
            type=ref,event=branch


      - name: Build and push multi-arch Docker image
        id: build-and-push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: rashedkhan/my-custom-mysql-image:production-latest
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64  # Add other platforms if needed
          build-args: |
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            S3_URI=${{ inputs.s3_uri }}
            FILE_NAME=${{ inputs.file_name }}         
            VERSION=${{ github.ref_name }}
            COMMIT=${{ github.sha }}
      

#  notify_slack:
#    runs-on: ubuntu-latest
#    needs: [view_tables]
#    steps:
#      - name: Send Notification to Slack
#        if: always()
#        uses: 8398a7/action-slack@v3
#        with:
#          status: ${{ needs.view_tables.result }}
#          text: 'The `view_tables` job has ${{ needs.view_tables.result }}.'
#          mention: channel
#          author_name: GitHub Actions
#          channel: '#dpc-devops-internal'
#          if_mention: always
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}




